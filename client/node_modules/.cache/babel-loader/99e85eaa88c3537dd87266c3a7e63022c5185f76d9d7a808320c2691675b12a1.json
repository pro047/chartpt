{"ast":null,"code":"import axios from 'axios';\nexport const instance = axios.create({\n  baseURL: 'http://localhost:8080',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true\n});\nconst req = instance.interceptors.request.use(config => {\n  const accessToken = localStorage.getItem('accessToken');\n  const refreshToken = localStorage.getItem('refrechToken');\n  if (accessToken) {\n    config.headers['Authorization'] = `Bearer ${accessToken}`;\n  }\n  if (refreshToken) {\n    config.headers['x-refesh-token'] = refreshToken;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst res = instance.interceptors.response.use(async response => {\n  return response;\n}, async error => {\n  const {\n    config,\n    response: {\n      status,\n      data\n    }\n  } = error;\n  if (status === 401 && data.message === 'InvalidTokenException') {\n    logout();\n  }\n  if (status === 401 && data.message === 'TokenExpired') {\n    try {\n      const tokenRefreshResult = await instance.post('/refresh-token');\n      if (tokenRefreshResult.status === 200) {\n        const {\n          accessToken,\n          refreshToken\n        } = tokenRefreshResult.data;\n        localStorage.setItem('accessToken', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n        return instance(config);\n      } else {\n        logout();\n      }\n    } catch (e) {\n      logout();\n    }\n  }\n  return Promise.reject(error);\n});\nexport const SignUp = async (email, password, name) => {\n  const result = await instance.post('/signup', {\n    headers: {\n      ...instance.headers\n    },\n    data: {\n      email,\n      password,\n      name\n    }\n  });\n  return result;\n};\n_c = SignUp;\nexport const login = async (email, password) => {\n  const result = await instance.post('/login', {\n    data: {\n      email,\n      password\n    }\n  });\n  console.log(result);\n  return result;\n};\nexport const logout = () => {};\n// todo error check\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["axios","instance","create","baseURL","headers","withCredentials","req","interceptors","request","use","config","accessToken","localStorage","getItem","refreshToken","error","Promise","reject","res","response","status","data","message","logout","tokenRefreshResult","post","setItem","e","SignUp","email","password","name","result","_c","login","console","log","$RefreshReg$"],"sources":["C:/Users/pro04/coding/chartpt/client/src/network/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n  baseURL: 'http://localhost:8080',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true,\r\n});\r\n\r\nconst req = instance.interceptors.request.use(\r\n  (config) => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    const refreshToken = localStorage.getItem('refrechToken');\r\n\r\n    if (accessToken) {\r\n      config.headers['Authorization'] = `Bearer ${accessToken}`;\r\n    }\r\n\r\n    if (refreshToken) {\r\n      config.headers['x-refesh-token'] = refreshToken;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst res = instance.interceptors.response.use(\r\n  async (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const {\r\n      config,\r\n      response: { status, data },\r\n    } = error;\r\n\r\n    if (status === 401 && data.message === 'InvalidTokenException') {\r\n      logout();\r\n    }\r\n\r\n    if (status === 401 && data.message === 'TokenExpired') {\r\n      try {\r\n        const tokenRefreshResult = await instance.post('/refresh-token');\r\n        if (tokenRefreshResult.status === 200) {\r\n          const { accessToken, refreshToken } = tokenRefreshResult.data;\r\n          localStorage.setItem('accessToken', accessToken);\r\n          localStorage.setItem('refreshToken', refreshToken);\r\n          return instance(config);\r\n        } else {\r\n          logout();\r\n        }\r\n      } catch (e) {\r\n        logout();\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const SignUp = async (email, password, name) => {\r\n  const result = await instance.post('/signup', {\r\n    headers: {\r\n      ...instance.headers,\r\n    },\r\n    data: {\r\n      email,\r\n      password,\r\n      name,\r\n    },\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n  const result = await instance.post('/login', {\r\n    data: {\r\n      email,\r\n      password,\r\n    },\r\n  });\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nexport const logout = () => {};\r\n// todo error check\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}