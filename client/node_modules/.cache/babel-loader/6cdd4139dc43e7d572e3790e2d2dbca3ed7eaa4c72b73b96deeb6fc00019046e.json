{"ast":null,"code":"import axios from 'axios';\nexport default class HttpClient {\n  constructor(baseURL, authErrorEventBus, getCsrfToken) {\n    this.authErrorEventBus = authErrorEventBus;\n    this.getCsrfToken = getCsrfToken;\n    this.client = axios.create({\n      baseURL: baseURL,\n      headers: {\n        'Content-Type': 'application/json',\n        withCredentials: true\n      }\n    });\n  }\n  async fetch(url, options) {\n    const {\n      body,\n      method,\n      headers\n    } = options;\n    const req = {\n      url,\n      method,\n      headers: {\n        ...headers,\n        'chart-csrf-token': this.getCsrfToken()\n      },\n      data: body\n    };\n    try {\n      const res = await this.client(req);\n      return res.data;\n    } catch (e) {\n      if (e.respose) {\n        const data = e.respose.data;\n        const message = data && data.message ? data.message : 'Something went wrong';\n        throw new Error(message);\n      }\n      throw new Error('connection error');\n    }\n  }\n}","map":{"version":3,"names":["axios","HttpClient","constructor","baseURL","authErrorEventBus","getCsrfToken","client","create","headers","withCredentials","fetch","url","options","body","method","req","data","res","e","respose","message","Error"],"sources":["C:/Users/pro04/coding/chartpt/client/src/network/http.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport default class HttpClient {\r\n  constructor(baseURL, authErrorEventBus, getCsrfToken) {\r\n    this.authErrorEventBus = authErrorEventBus;\r\n    this.getCsrfToken = getCsrfToken;\r\n    this.client = axios.create({\r\n      baseURL: baseURL,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        withCredentials: true,\r\n      },\r\n    });\r\n  }\r\n\r\n  async fetch(url, options) {\r\n    const { body, method, headers } = options;\r\n    const req = {\r\n      url,\r\n      method,\r\n      headers: {\r\n        ...headers,\r\n        'chart-csrf-token': this.getCsrfToken(),\r\n      },\r\n      data: body,\r\n    };\r\n\r\n    try {\r\n      const res = await this.client(req);\r\n      return res.data;\r\n    } catch (e) {\r\n      if (e.respose) {\r\n        const data = e.respose.data;\r\n        const message =\r\n          data && data.message ? data.message : 'Something went wrong';\r\n        throw new Error(message);\r\n      }\r\n      throw new Error('connection error');\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,MAAMC,UAAU,CAAC;EAC9BC,WAAWA,CAACC,OAAO,EAAEC,iBAAiB,EAAEC,YAAY,EAAE;IACpD,IAAI,CAACD,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,MAAM,GAAGN,KAAK,CAACO,MAAM,CAAC;MACzBJ,OAAO,EAAEA,OAAO;MAChBK,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,eAAe,EAAE;MACnB;IACF,CAAC,CAAC;EACJ;EAEA,MAAMC,KAAKA,CAACC,GAAG,EAAEC,OAAO,EAAE;IACxB,MAAM;MAAEC,IAAI;MAAEC,MAAM;MAAEN;IAAQ,CAAC,GAAGI,OAAO;IACzC,MAAMG,GAAG,GAAG;MACVJ,GAAG;MACHG,MAAM;MACNN,OAAO,EAAE;QACP,GAAGA,OAAO;QACV,kBAAkB,EAAE,IAAI,CAACH,YAAY,CAAC;MACxC,CAAC;MACDW,IAAI,EAAEH;IACR,CAAC;IAED,IAAI;MACF,MAAMI,GAAG,GAAG,MAAM,IAAI,CAACX,MAAM,CAACS,GAAG,CAAC;MAClC,OAAOE,GAAG,CAACD,IAAI;IACjB,CAAC,CAAC,OAAOE,CAAC,EAAE;MACV,IAAIA,CAAC,CAACC,OAAO,EAAE;QACb,MAAMH,IAAI,GAAGE,CAAC,CAACC,OAAO,CAACH,IAAI;QAC3B,MAAMI,OAAO,GACXJ,IAAI,IAAIA,IAAI,CAACI,OAAO,GAAGJ,IAAI,CAACI,OAAO,GAAG,sBAAsB;QAC9D,MAAM,IAAIC,KAAK,CAACD,OAAO,CAAC;MAC1B;MACA,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;IACrC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}